import React, { useState, useEffect } from "react";
import Link from 'next/link';
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import axios from 'axios';
import { useRouter } from 'next/router'
import { BrowserRouter, Routes, Route, NavLink, useLocation } from "react-router-dom";
import { Box, Flex, Divider, Stack } from '@chakra-ui/react'

const Home = (props) => {
  return (
    <Box mt="0px">
      <Box> Name: {props.username} </Box>
    </Box>
  )
}

const Login = () => { return <p>Login</p> }

const RecoveryPassword = () => { return <p>RecoveryPassword</p> }

const NotFound = () => {
  let location = useLocation();
  useEffect(() => {
    console.log(location.pathname);
    if (location.pathname !== '/customer-care') {
      window.location.href = location.pathname;
    }
  }, [location]);

  return '';
}

const SPA = (props) => {
  return (<>
    <BrowserRouter>
      <Flex>
        <Stack className={styles.card}>
          {/* 点击跳转 Link  NavLink */}
          <NavLink to="/spa" activestyle={{ color: '#f66' }}>用户</NavLink>
          <NavLink to="/login" activestyle={{ color: '#f66' }}> 登录</NavLink>
          <NavLink to="/recovery-password" activestyle={{ color: '#f66' }}> 恢复密码</NavLink>
          <NavLink to="/fgm" activestyle={{ color: '#f66' }}> FGM - 模块跳转</NavLink>
        </Stack>
        <Box mt="1em">
          <Routes>
            <Route exact path="/spa" element={<Home tags={props.tags} username={props.username} />} />
            <Route exact path="/login" element={<Login />} />
            <Route exact path="/recovery-password" element={<RecoveryPassword />} />
            <Route path="*" element={<NotFound />} />
          </Routes>
        </Box>
      </Flex>
    </BrowserRouter>
  </>)
}

export default function CC({ tags }) {
  //console.log('tags: ', tags);
  const [inBrowser, setInBrowser] = useState(false);
  const [userName, setUserName] = useState('noname');

  useEffect(() => {
    console.log('componentDidMount');
    const name = localStorage.getItem('myCat');
    if (name === null) {
      name = 'Tom'
      localStorage.setItem('myCat', name);
      console.log('set Name', name);
    }

    setUserName(name);
    setInBrowser(true);
  }, []);


  return (
    <div className={styles.container}>
      <Head>
        <title>Customer Care</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Box><p className={styles.normal}><Link href='/'><a>返回主页</a></Link></p></Box>
        <h1 className={styles.title}>Customer Care</h1>

        <Divider m="2em 0px" />

        <Box>
          {inBrowser && tags.map(item => <span className={styles.tag} key={item.id}>{item.tag}</span>)}
        </Box>

        <Box> {inBrowser && <SPA username={userName} />} </Box>
      </main>
    </div>
  )
}

export async function getServerSideProps(context) {
  let tags = [1, 2, 3];

  tags = await axios.get('http://www.tomtalk.net/tag_api/getListTotal').then(res => {
    return res.data;
  });

  //console.log(tags);

  return {
    props: {
      tags: tags
    }
  }
}